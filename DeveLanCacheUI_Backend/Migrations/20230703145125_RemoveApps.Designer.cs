// <auto-generated />
using System;
using DeveLanCacheUI_Backend.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeveLanCacheUI_Backend.Migrations
{
    [DbContext(typeof(DeveLanCacheUIDbContext))]
    [Migration("20230703145125_RemoveApps")]
    partial class RemoveApps
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("DeveLanCacheUI_Backend.Db.DbModels.DbSteamAppDownloadEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CacheHitBytes")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CacheMissBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientIp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("SteamDepotId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SteamDepotId");

                    b.ToTable("SteamAppDownloadEvents");
                });

            modelBuilder.Entity("DeveLanCacheUI_Backend.Db.DbModels.DbSteamDepot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SteamAppId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SteamDepots");
                });

            modelBuilder.Entity("DeveLanCacheUI_Backend.Db.DbModels.DbSteamAppDownloadEvent", b =>
                {
                    b.HasOne("DeveLanCacheUI_Backend.Db.DbModels.DbSteamDepot", "SteamDepot")
                        .WithMany("DownloadEvents")
                        .HasForeignKey("SteamDepotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SteamDepot");
                });

            modelBuilder.Entity("DeveLanCacheUI_Backend.Db.DbModels.DbSteamDepot", b =>
                {
                    b.Navigation("DownloadEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
